// Force height for alternatives input types
input:not([type="checkbox"]):not([type="radio"]):not([type="range"]) {
  height: calc(
    (1rem * var(--line-height)) + (var(--form-element-spacing-vertical) * 2) +
      (var(--border-width) * 2)
  );
}

// Fieldset
fieldset {
  margin: 0;
  margin-bottom: var(--spacing);
  padding: 0;
  border: 0;
}

// Label & legend
label,
fieldset legend {
  display: block;
  margin-bottom: calc(var(--spacing) * 0.25);
  font-weight: var(--form-label-font-weight, var(--font-weight));
}

// Blocks, 100%
input:not([type="checkbox"]):not([type="radio"]),
select,
textarea {
  width: 100%;
}

// Reset appearance (Not Checkboxes, Radios, Range and File)
input:not([type="checkbox"]):not([type="radio"]):not([type="range"]):not([type="file"]),
select,
textarea {
  appearance: none;
  padding: var(--form-element-spacing-vertical)
    var(--form-element-spacing-horizontal);
  vertical-align: middle;
}

// Commons styles
input,
select,
textarea {
  --background-color: var(--form-element-background-color);
  --border-color: var(--form-element-border-color);
  --color: var(--form-element-color);
  --box-shadow: none;
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  outline: none;
  background-color: var(--background-color);
  box-shadow: var(--box-shadow);
  color: var(--color);
  font-weight: var(--font-weight);

  @if $enable-transitions {
    transition: background-color var(--transition),
      border-color var(--transition), color var(--transition),
      box-shadow var(--transition);
  }
}

// Active & Focus
input:not([type="submit"]):not([type="button"]):not([type="reset"]):not([type="checkbox"]):not([type="radio"]):not([readonly]),
:where(select, textarea) {
  &:is(:active, :focus) {
    --background-color: var(--form-element-active-background-color);
  }
}

// Active & Focus
input:not([type="submit"]):not([type="button"]):not([type="reset"]):not([role="switch"]):not([readonly]),
:where(select, textarea) {
  &:is(:active, :focus) {
    --border-color: var(--form-element-active-border-color);
  }
}

// Focus
input:not([type="submit"]):not([type="button"]):not([type="reset"]):not([type="range"]):not([type="file"]):not([readonly]),
select,
textarea {
  &:focus {
    --box-shadow: 0 0 0 var(--outline-width) var(--form-element-focus-color);
  }
}

// Disabled
input:not([type="submit"]):not([type="button"]):not([type="reset"])[disabled],
select[disabled],
textarea[disabled],
:where(fieldset[disabled])
  :is(input:not([type="submit"]):not([type="button"]):not([type="reset"]), select, textarea) {
  --background-color: var(--form-element-disabled-background-color);
  --border-color: var(--form-element-disabled-border-color);
  opacity: var(--form-element-disabled-opacity);
  pointer-events: none;
}

// Aria-invalid
:where(input, select, textarea) {
  &:not([type="checkbox"]):not([type="radio"]) {
    &[aria-invalid] {
      @if $enable-important {
        padding-right: calc(
          var(--form-element-spacing-horizontal) + 1.5rem
        ) !important;
        padding-left: var(--form-element-spacing-horizontal);
        padding-inline-start: var(--form-element-spacing-horizontal) !important;
        padding-inline-end: calc(
          var(--form-element-spacing-horizontal) + 1.5rem
        ) !important;
      } @else {
        padding-right: calc(var(--form-element-spacing-horizontal) + 1.5rem);
        padding-left: var(--form-element-spacing-horizontal);
        padding-inline-start: var(--form-element-spacing-horizontal);
        padding-inline-end: calc(
          var(--form-element-spacing-horizontal) + 1.5rem
        );
      }
      background-position: center right 0.75rem;
      background-size: 1rem auto;
      background-repeat: no-repeat;
    }

    &[aria-invalid="false"] {
      background-image: var(--icon-valid);
    }

    &[aria-invalid="true"] {
      background-image: var(--icon-invalid);
    }
  }

  &[aria-invalid="false"] {
    --border-color: var(--form-element-valid-border-color);

    &:is(:active, :focus) {
      @if $enable-important {
        --border-color: var(
          --form-element-valid-active-border-color
        ) !important;
        --box-shadow: 0
          0
          0
          var(--outline-width)
          var(--form-element-valid-focus-color) !important;
      } @else {
        --border-color: var(--form-element-valid-active-border-color);
        --box-shadow: 0
          0
          0
          var(--outline-width)
          var(--form-element-valid-focus-color);
      }
    }
  }

  &[aria-invalid="true"] {
    --border-color: var(--form-element-invalid-border-color);

    &:is(:active, :focus) {
      @if $enable-important {
        --border-color: var(
          --form-element-invalid-active-border-color
        ) !important;
        --box-shadow: 0
          0
          0
          var(--outline-width)
          var(--form-element-invalid-focus-color) !important;
      } @else {
        --border-color: var(--form-element-invalid-active-border-color);
        --box-shadow: 0
          0
          0
          var(--outline-width)
          var(--form-element-invalid-focus-color);
      }
    }
  }
}

[dir="rtl"] {
  :where(input, select, textarea) {
    &:not([type="checkbox"]):not([type="radio"]) {
      &[aria-invalid],
      &[aria-invalid="true"],
      &[aria-invalid="false"] {
        background-position: center left 0.75rem;
      }
    }
  }
}

// Placeholder
input::placeholder,
input::-webkit-input-placeholder,
textarea::placeholder,
textarea::-webkit-input-placeholder,
select:invalid {
  color: var(--form-element-placeholder-color);
  opacity: 1;
}

// Margin bottom (Not Checkboxes and Radios)
input:not([type="checkbox"]):not([type="radio"]),
select,
textarea {
  margin-bottom: var(--spacing);
}

// Select
select {
  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  &:not([multiple]):not([size]) {
    padding-right: calc(var(--form-element-spacing-horizontal) + 1.5rem);
    padding-left: var(--form-element-spacing-horizontal);
    padding-inline-start: var(--form-element-spacing-horizontal);
    padding-inline-end: calc(var(--form-element-spacing-horizontal) + 1.5rem);
    background-image: var(--icon-chevron);
    background-position: center right 0.75rem;
    background-size: 1rem auto;
    background-repeat: no-repeat;
  }
}

[dir="rtl"] {
  select {
    &:not([multiple]):not([size]) {
      background-position: center left 0.75rem;
    }
  }
}

// Helper
:where(input, select, textarea) {
  + small {
    display: block;
    width: 100%;
    margin-top: calc(var(--spacing) * -0.75);
    margin-bottom: var(--spacing);
    color: var(--muted-color);
  }
}

// Styles for Input inside a label
label {
  > :where(input, select, textarea) {
    margin-top: calc(var(--spacing) * 0.25);
  }
}
